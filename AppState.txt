BEGINNER
React Native AppState

React Native AppState let you know the currents state of the application. 
It will give you the information that Application is in the foreground or in the background, and will notify you on the change of state. 
AppState is frequently used to determine the intent and proper behavior when handling push notifications.

App States
React Native AppState will provide you the following different App states:

active – The app is running in the foreground
background – The app is running in the background. The user is either:
using another app
on the home screen
[Android] on another Activity (even if it was launched by your app)
inactive – This is a state that occurs when transitioning between foreground & background, 
and during periods of inactivity such as entering the Multitasking view or in the event of an incoming call


import React, {Component} from 'react';
import {ActivityIndicator,AppState, Text, View,Platform} from 'react-native';

type Props = {};
export default class App extends Component<Props> {
  state = {
  appState: AppState.currentState,
};
componentDidMount() {
  AppState.addEventListener('change', this._handleAppStateChange);
}
componentWillUnmount() {
  AppState.removeEventListener('change', this._handleAppStateChange);
}
_handleAppStateChange = nextAppState => {
  if (this.state.appState.match(/inactive|background/) && nextAppState === 'active') {
    console.log('App has come to the foreground!');
  }
  console.log(nextAppState);
  this.setState({ appState: nextAppState });
};
render() {
  return (
    <Text style={{ marginTop: 30, padding: 20 }}>
      Current state is: {this.state.appState}
    </Text>
  );
}
}